<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koticobui.dfmc.client.mypage.mapper.MypageMapper">

    <select id="selectContractListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM
            COMTNGNRLMBER MBER
            , TB_CAR TC
            , TB_CONTRACT_INFO TCI
            , TB_ASSIGN_SECTION TAS
            , TB_PARK_SECTION TPS
            , TB_PARK_BLOCK TPB
            , TB_PARK_DIVISION TPD
            , TB_QUARTER_PAYMENT TQP
            , TB_QUARTER TQ
            , TB_PAY TP
        WHERE MBER.ESNTL_ID = #{esntlId}
        AND MBER.ESNTL_ID = TC.ESNTL_ID
        AND TC.CAR_KEY = TCI.CAR_KEY
        AND TCI.ASSIGN_SECTION_KEY = TAS.ASSIGN_SECTION_KEY
        AND TAS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
        AND TAS.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY(+)
        AND TAS.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY(+)
        AND TCI.CONTRACT_INFO_KEY = TQP.CONTRACT_INFO_KEY
        AND TQP.QUARTER_SEQ = TQ.QUARTER_SEQ(+)
        AND TQP.YEAR = TQ.YEAR(+)
        AND TQP.PURCHASE_KEY = TP.PURCHASE_KEY(+)
        AND TQP.STAT_CD IN ('01', '03', '04')
        AND TQP.PAY_METHOD_CD = '02'
        AND TCI.PARKING_PRODUCT = '02'
        <!-- AND TP.PROC_RESULT = '01' -->
    </select>
    
    <select id="selectContractList" resultType="egovMap" parameterType="hashmap">
        SELECT
            Z.*, SUBSTR(USE_BEGIN_DATE_STR, 1, 7) || '월' LABEL_TITLE
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
					TC.CAR_NUMBER
					, MBER.MBER_NM
					, TPS.PARK_SECTION_NAME
					, TPB.PARK_BLOCK_NAME
					, TPD.DIVISION_NAME
					, TQP.USE_BEGIN_DATE
					, TO_CHAR(TQP.USE_BEGIN_DATE, 'YYYY-MM-DD') USE_BEGIN_DATE_STR
					, TQP.USE_END_DATE
					, TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD') USE_END_DATE_STR
					, TCI.USE_TIME
					, FN_CODENM('DFM012', TCI.USE_TIME) USE_TIME_NAME
					, TCI.USE_MONTH
					, FN_CODENM('DFM029', TCI.USE_MONTH) USE_MONTH_NAME
					, TQP.COST
					, TRIM(TO_CHAR(TQP.COST, '999,999,999,999,999')) COST_COMMA
					, CASE
					    WHEN TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD') <![CDATA[ > ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
					    THEN '사용중'
					    WHEN TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD') <![CDATA[ < ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
					    THEN '이용기간만료'
					    ELSE '사용중'
					END AS USE_STATUS
					, TQP.STATUS_CD
					, FN_CODENM('DFM016', TQP.STATUS_CD) STATUS_CD_NAME
					, TCI.PARKING_PRODUCT
					, FN_CODENM('DFM030', TCI.PARKING_PRODUCT) PARKING_PRODUCT_NAME
					, MBER.MBER_PHONE
					, TQP.PURCHASE_KEY
					, MBER.ESNTL_ID
					, SUBSTR(MBER.MBER_PHONE, 1, 3) || '-' || SUBSTR(MBER.MBER_PHONE, 4, LENGTH(MBER.MBER_PHONE) - 7) || '-' || SUBSTR(MBER.MBER_PHONE, LENGTH(MBER.MBER_PHONE) - 3) MBER_PHONE_STR
				FROM
					COMTNGNRLMBER MBER
					, TB_CAR TC
					, TB_CONTRACT_INFO TCI
					, TB_ASSIGN_SECTION TAS
					, TB_PARK_SECTION TPS
					, TB_PARK_BLOCK TPB
					, TB_PARK_DIVISION TPD
					, TB_QUARTER_PAYMENT TQP
					, TB_QUARTER TQ
					, TB_PAY TP
				WHERE MBER.ESNTL_ID = #{esntlId}
				AND MBER.ESNTL_ID = TC.ESNTL_ID
				AND TC.CAR_KEY = TCI.CAR_KEY
				AND TCI.ASSIGN_SECTION_KEY = TAS.ASSIGN_SECTION_KEY
				AND TAS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TAS.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY(+)
				AND TAS.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY(+)
				AND TCI.CONTRACT_INFO_KEY = TQP.CONTRACT_INFO_KEY
				AND TQP.QUARTER_SEQ = TQ.QUARTER_SEQ(+)
				AND TQP.YEAR = TQ.YEAR(+)
				AND TQP.PURCHASE_KEY = TP.PURCHASE_KEY(+)
				AND TQP.STAT_CD IN ('01', '03', '04')
				AND TQP.PAY_METHOD_CD = '02'
				AND TCI.PARKING_PRODUCT = '02'
				
	            <if test="purchaseKey != null and purchaseKey != ''">
	                AND TQP.PURCHASE_KEY = #{purchaseKey}
	                AND ROWNUM <![CDATA[ <= ]]> 1
	            </if>
				
				<!-- AND TP.PROC_RESULT = '01' -->
				ORDER BY TP.PAY_DATE

                ) A
            ) Z
            
        <choose>
            <when test="mobileYn eq 'Y'.toString()">
            </when>
            <otherwise>
                <if test="pageNo != null and pageNo != ''">
		            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
		        </if>
            </otherwise>
        </choose>
        
    </select>

    <select id="selectPaymentListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM
		    COMTNGNRLMBER MBER
		    , TB_CAR TC
		    , TB_CONTRACT_INFO TCI
		    , TB_ASSIGN_SECTION TAS
		    , TB_PARK_SECTION TPS
		    , TB_PARK_BLOCK TPB
		    , TB_PARK_DIVISION TPD
		    , TB_QUARTER_PAYMENT TQP
		WHERE MBER.ESNTL_ID = #{esntlId}
		AND MBER.ESNTL_ID = TC.ESNTL_ID
		AND TC.CAR_KEY = TCI.CAR_KEY
		AND TCI.ASSIGN_SECTION_KEY = TAS.ASSIGN_SECTION_KEY
		AND TAS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
		AND TAS.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY(+)
		AND TAS.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY(+)
		AND TCI.CONTRACT_INFO_KEY = TQP.CONTRACT_INFO_KEY
		AND TQP.STATUS_CD IN ('00', '03')
		AND (TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD') OR TQP.PAY_LIMIT_DT IS NULL)
    </select>
    
    <select id="selectPaymentList" resultType="egovMap" parameterType="hashmap">
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
					MBER.ESNTL_ID
					, TCI.CONTRACT_INFO_KEY
					, TQP.PURCHASE_KEY
					, TC.CAR_NUMBER
					, MBER.MBER_NM
					, MBER.MBER_EMAIL_ADRES
					, MBER.MBER_PHONE
					, TPS.PARK_SECTION_NAME
					, TPB.PARK_BLOCK_NAME
					, TPD.DIVISION_NAME
					, TQP.USE_BEGIN_DATE
					, TO_CHAR(TQP.USE_BEGIN_DATE, 'YYYY-MM-DD') USE_BEGIN_DATE_STR
					, TQP.USE_END_DATE
					, TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD') USE_END_DATE_STR
					, TCI.USE_TIME
					, FN_CODENM('DFM012', TCI.USE_TIME) USE_TIME_NAME
					, TCI.USE_MONTH
					, FN_CODENM('DFM029', TCI.USE_MONTH) USE_MONTH_NAME
					, TQP.COST
					, TRIM(TO_CHAR(TQP.COST, '999,999,999,999,999')) COST_COMMA
					, FN_CODENM('DFM016', TQP.STATUS_CD) STATUS_CD_NAME
					, TCI.PARKING_PRODUCT
					, FN_CODENM('DFM030', TCI.PARKING_PRODUCT) PARKING_PRODUCT_NAME
					, TO_CHAR(TO_DATE(TQP.PAY_LIMIT_DT, 'YYYYMMDD'), 'YYYY-MM-DD') PAY_LIMIT_DT_STR
				FROM
					COMTNGNRLMBER MBER
					, TB_CAR TC
					, TB_CONTRACT_INFO TCI
					, TB_ASSIGN_SECTION TAS
					, TB_PARK_SECTION TPS
					, TB_PARK_BLOCK TPB
					, TB_PARK_DIVISION TPD
					, TB_QUARTER_PAYMENT TQP
				WHERE MBER.ESNTL_ID = #{esntlId}
				AND MBER.ESNTL_ID = TC.ESNTL_ID
				AND TC.CAR_KEY = TCI.CAR_KEY
				AND TCI.ASSIGN_SECTION_KEY = TAS.ASSIGN_SECTION_KEY
				AND TAS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TAS.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY(+)
				AND TAS.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY(+)
				AND TCI.CONTRACT_INFO_KEY = TQP.CONTRACT_INFO_KEY
				AND TQP.STATUS_CD IN ('00', '03')
				<!-- AND (TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD') OR TQP.PAY_LIMIT_DT IS NULL) -->
				ORDER BY TQP.PAY_LIMIT_DT ASC

                ) A
            )
            
        <if test="pageNo != null and pageNo != ''">
            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
        </if>
    </select>
    
    <select id="selectRegulatePaymentListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            SUM(CNT)
        FROM (
			SELECT
				COUNT(1) CNT
		    FROM
				TB_REGULATE TR
				, TB_REGULATE_RECEIVE TRR
				, TB_PARK_SECTION TPS
				, TB_PARK_BLOCK TPB
				, TB_PARK_DIVISION TPD
				, TB_QUARTER_PAYMENT TQP
			WHERE TR.REGULATE_KEY = TRR.REGULATE_KEY
			AND TRR.CAR_NUMBER = #{searchCarNumber}
			AND TR.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
			AND TR.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY
			AND TR.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY
			AND TRR.PURCHASE_KEY = TQP.PURCHASE_KEY
			AND (TR.CANCEL_YN = 'N' OR TR.CANCEL_YN IS NULL)
			AND TQP.STATUS_CD = '00'
			AND TQP.PAY_METHOD_CD = '01'
			AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
			UNION ALL
			SELECT
				COUNT(1) CNT
				FROM
				TB_TIME_PARK_CONDITION TTPC
				, TB_TIME_PARK_RECEIVE TTPR
				, TB_PARK_SECTION TPS
				, TB_QUARTER_PAYMENT TQP
			WHERE TTPC.TIME_PARK_CONDITION_KEY = TTPR.TIME_PARK_CONDITION_KEY
			AND TTPR.CAR_NUMBER = #{searchCarNumber}
			AND TTPC.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
			AND TTPR.PURCHASE_KEY = TQP.PURCHASE_KEY
			AND (TTPC.CANCEL_YN = 'N' OR TTPC.CANCEL_YN IS NULL)
			AND TQP.STATUS_CD = '00'
			AND TQP.PAY_METHOD_CD = '01'
			AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
        )
    </select>
    
    <select id="selectRegulatePaymentList" resultType="egovMap" parameterType="hashmap">
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
					TR.REGULATE_KEY
					, TRR.REGULATE_RECEIVE_KEY
					, TQP.PURCHASE_KEY
					, TO_CHAR(TR.REGULATE_DATE, 'YYYY.MM.DD')||' '|| SUBSTR(TR.REGULATE_TIME, 0, 2)||':'||SUBSTR(TR.REGULATE_TIME, 3, 2) REGULATE_DATE_TIME_STR
					, '' ENTER_DATE_TIME_STR
					, '' OUT_TIME_STR
					, TRR.CAR_NUMBER
					, TRR.CAR_NAME
					, TRR.CAR_OWN_NAME
					, TRR.CAR_TEL
					, TPS.PARK_SECTION_NAME
					, TPB.PARK_BLOCK_NAME
					, TPD.DIVISION_NAME
					, TQP.COST
					, TRIM(TO_CHAR(TQP.COST, '999,999,999,999,999')) COST_COMMA
					, FN_CODENM('DFM016', TQP.STATUS_CD) STATUS_CD_NAME
					, TO_CHAR(TO_DATE(TQP.PAY_LIMIT_DT, 'YYYYMMDD'), 'YYYY-MM-DD') PAY_LIMIT_DT_STR
					, TQP.STAT_CD
					, FN_CODENM('DFM039', TQP.STAT_CD) STAT_CD_NAME
				FROM
					TB_REGULATE TR
					, TB_REGULATE_RECEIVE TRR
					, TB_PARK_SECTION TPS
					, TB_PARK_BLOCK TPB
					, TB_PARK_DIVISION TPD
					, TB_QUARTER_PAYMENT TQP
				WHERE TR.REGULATE_KEY = TRR.REGULATE_KEY
				AND TRR.CAR_NUMBER = #{searchCarNumber}
				AND TR.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TR.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY
				AND TR.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY
				AND TRR.PURCHASE_KEY = TQP.PURCHASE_KEY
				AND (TR.CANCEL_YN = 'N' OR TR.CANCEL_YN IS NULL)
				AND TQP.STATUS_CD = '00'
				AND TQP.PAY_METHOD_CD = '01'
				AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
				UNION ALL
				SELECT
					TTPC.TIME_PARK_CONDITION_KEY AS REGULATE_KEY
					, TTPR.TIME_PARK_RECEIVE_KEY AS REGULATE_RECEIVE_KEY
					, TQP.PURCHASE_KEY
					, '' REGULATE_DATE_TIME_STR
					, TO_CHAR(TTPC.ENTER_DATE, 'YYYY.MM.DD')||' '|| SUBSTR(TTPC.ENTER_TIME, 0, 2)||':'||SUBSTR(TTPC.ENTER_TIME, 3, 2) ENTER_DATE_TIME_STR
					, SUBSTR(TTPC.OUT_TIME, 0, 2)||':'||SUBSTR(TTPC.OUT_TIME, 3, 2) OUT_TIME_STR
					, TTPR.CAR_NUMBER
					, TTPR.CAR_NAME
					, TTPR.CAR_OWN_NAME
					, TTPR.CAR_TEL
					, TPS.PARK_SECTION_NAME
					, '' PARK_BLOCK_NAME
					, '' DIVISION_NAME
					, TQP.COST
					, TRIM(TO_CHAR(TQP.COST, '999,999,999,999,999')) COST_COMMA
					, FN_CODENM('DFM016', TQP.STATUS_CD) STATUS_CD_NAME
					, TO_CHAR(TO_DATE(TQP.PAY_LIMIT_DT, 'YYYYMMDD'), 'YYYY-MM-DD') PAY_LIMIT_DT_STR
					, TQP.STAT_CD
					, FN_CODENM('DFM039', TQP.STAT_CD) STAT_CD_NAME
				FROM
					TB_TIME_PARK_CONDITION TTPC
					, TB_TIME_PARK_RECEIVE TTPR
					, TB_PARK_SECTION TPS
					, TB_QUARTER_PAYMENT TQP
				WHERE TTPC.TIME_PARK_CONDITION_KEY = TTPR.TIME_PARK_CONDITION_KEY
				AND TTPR.CAR_NUMBER = #{searchCarNumber}
				AND TTPC.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TTPR.PURCHASE_KEY = TQP.PURCHASE_KEY
				AND (TTPC.CANCEL_YN = 'N' OR TTPC.CANCEL_YN IS NULL)
				AND TQP.STATUS_CD = '00'
				AND TQP.PAY_METHOD_CD = '01'
				AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
				
                ) A
            )
            
        <if test="pageNo != null and pageNo != ''">
            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
        </if>
    </select>
    
    <select id="selectRequestRefundTot" resultType="Integer" parameterType="hashmap">
		SELECT COUNT(*) CNT  
		FROM TB_CAR TC INNER JOIN COMTNGNRLMBER MBER ON MBER.ESNTL_ID = TC.ESNTL_ID
		    INNER JOIN TB_CONTRACT_INFO TCI ON TCI.CAR_KEY = TC.CAR_KEY
		    INNER JOIN TB_QUARTER_PAYMENT TQP ON TQP.CONTRACT_INFO_KEY = TCI.CONTRACT_INFO_KEY
		    INNER JOIN TB_PAY TP ON TP.PURCHASE_KEY = TQP.PURCHASE_KEY
		    INNER JOIN TB_ASSIGN_SECTION TAS ON TAS.ASSIGN_SECTION_KEY = TCI.ASSIGN_SECTION_KEY
		    INNER JOIN TB_PARK_SECTION TPS ON TPS.PARK_SECTION_KEY = TAS.PARK_SECTION_KEY
		    LEFT JOIN TB_DISCOUNT_DETAIL TDD ON TDD.ESNTL_ID = MBER.ESNTL_ID
		    LEFT JOIN TB_DISCOUNT_ITEM TDI ON TDI.DISCOUNT_ITEM_KEY = TDD.DISCOUNT_ITEM_KEY
		WHERE MBER.ESNTL_ID = #{searchEsntlId}
		    AND TC.CAR_NUMBER LIKE '%' || #{searchCarNumber} || '%'
		    AND TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD') <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		    AND TQP.YEAR = FN_CURRENTYEAR AND TQP.QUARTER_SEQ = FN_CURRENTSEQ
    </select>
    
	<select id="selectRequestRefund" resultType="egovMap" parameterType="hashmap">
		SELECT TQP.PURCHASE_KEY, TP.PAYMENT_KEY, TC.CAR_NUMBER, TO_CHAR(TQP.USE_BEGIN_DATE, 'YYYY-MM-DD') USE_BEGIN_DATE, 
			NVL(TP.REQUEST_END_DATE, TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD')) USE_END_DATE, 
			TO_CHAR(TO_DATE(TP.PAY_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') PAY_DATE, 
			TP.PAY_AMT, TO_CHAR(TP.PAY_AMT, '999,999,999,999') PAY_AMT_STR, TP.REFUND_RCV_DATE, TP.REFUND_STATUS,
		    FN_CODENM('DFM041', CASE WHEN TP.REFUND_STATUS IS NULL AND TP.REFUND_AMT <![CDATA[ > ]]> 0 AND TP.REFUND_DATE IS NOT NULL THEN '02' ELSE TP.REFUND_STATUS END) REFUND_STATUS_STR, 
		    TP.REFUND_APPROVAL_DATE, FN_CODENM('DFM037', TP.REFUND_GIVE_BANK) AS REFUND_GIVE_BANK_NAME,
		    TP.REFUND_DEPOSITOR, TP.REFUND_DEPOSIT_NO, TDI.DISCOUNT_RATE, TQP.QUARTER_SEQ,
		    NVL(CASE WHEN TCI.USE_TIME = '01' THEN TPS.ALL_DAY_CHARGE WHEN TCI.USE_TIME = '02' THEN TPS.DAY_TIME_CHARGE ELSE TPS.NIGHT_TIME_CHARGE END, 0) UNIT_COST
		FROM TB_CAR TC INNER JOIN COMTNGNRLMBER MBER ON MBER.ESNTL_ID = TC.ESNTL_ID
		    INNER JOIN TB_CONTRACT_INFO TCI ON TCI.CAR_KEY = TC.CAR_KEY
		    INNER JOIN TB_QUARTER_PAYMENT TQP ON TQP.CONTRACT_INFO_KEY = TCI.CONTRACT_INFO_KEY
		    INNER JOIN TB_PAY TP ON TP.PURCHASE_KEY = TQP.PURCHASE_KEY
		    INNER JOIN TB_ASSIGN_SECTION TAS ON TAS.ASSIGN_SECTION_KEY = TCI.ASSIGN_SECTION_KEY
		    INNER JOIN TB_PARK_SECTION TPS ON TPS.PARK_SECTION_KEY = TAS.PARK_SECTION_KEY
		    LEFT JOIN TB_DISCOUNT_DETAIL TDD ON TDD.ESNTL_ID = MBER.ESNTL_ID
		    LEFT JOIN TB_DISCOUNT_ITEM TDI ON TDI.DISCOUNT_ITEM_KEY = TDD.DISCOUNT_ITEM_KEY
		WHERE MBER.ESNTL_ID = #{searchEsntlId} 
		    AND TC.CAR_NUMBER LIKE '%' || #{searchCarNumber} || '%'
		    AND TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD')	<![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		    AND TQP.YEAR = FN_CURRENTYEAR AND TQP.QUARTER_SEQ = FN_CURRENTSEQ
	</select>    
    
    <select id="confirmPassword" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM
            COMTNGNRLMBER
        WHERE ESNTL_ID = #{esntlId}
        AND PASSWORD = PASSWORD(#{password})
    </select>
    
    <select id="searchMemberInfo" resultType="egovMap" parameterType="hashmap">
        SELECT
		    MBER.ESNTL_ID
		    , MBER.MBER_ID
		    , MBER.MBER_NM
		    , MBER.MBER_BIRTH
		    , MBER.MBER_EMAIL_ADRES
		    , MBER.MBER_PHONE
		    , MBER.MBTLNUM
		    , MBER.ZIP
		    , MBER.ADRES
		    , MBER.DETAIL_ADRES
		    , MBER.ADRES_NEW_YN
		    , MBER.NOTICE_ZIP
		    , MBER.NOTICE_ADRES
		    , MBER.NOTICE_DETAIL_ADRES
		    , MBER.NOTICE_ADRES_NEW_YN
		    , TC.CAR_KEY
		    , TC.CAR_NUMBER
		    , TC.CAR_NAME
		    , TC.CAR_ZIP
		    , TC.CAR_ADRES
		    , TC.CAR_DETAIL_ADRES
		    , TC.CAR_ADRES_NEW_YN
		    , TC.LENT_CAR_YN
		FROM
		    COMTNGNRLMBER MBER
		    , TB_CAR TC
		WHERE MBER.ESNTL_ID = #{esntlId}
		AND MBER.ESNTL_ID = TC.ESNTL_ID
		AND ROWNUM = 1
    </select>
    
    <update id="refundRequest" parameterType="hashmap">
    	UPDATE TB_PAY
    	SET REFUND_REASON = #{searchRefundCode},
    		REFUND_RCV_DATE = TO_CHAR(SYSDATE, 'YYYY-MM-DD'),
    		REFUND_AMT = #{refundAmount},
    		REAL_REFUND_AMT = #{refundAmount},
    		REFUND_GIVE_BANK = #{searchBankCode},
    		REFUND_DEPOSIT_NO = #{depositNo},
    		REFUND_STATUS = '01',
    		REFUND_DEPOSITOR = #{refundDepositor},
    		REQUEST_END_DATE = #{useEndDate}
    	WHERE PAYMENT_KEY = #{paymentKey}
    </update>
    
    <update id="updateMember" parameterType="hashmap">
        UPDATE
            COMTNGNRLMBER
        SET
            PASSWORD_HINT = #{passwordHint}
            
            <if test="password != null and password != ''">
                , PASSWORD = PASSWORD(#{password})
                , PASSWORD_DT = SYSDATE
            </if>
            
            , MBER_BIRTH = #{mberBirth}
            , ZIP = #{zip}
            , ADRES = #{adres}
            , MBER_STTUS = #{mberSttus}
            , DETAIL_ADRES = #{detailAdres}
            , MBTLNUM = #{mbtlnum}
            , GROUP_ID = #{groupId}
            , MBER_EMAIL_ADRES = #{mberEmailAdres}
            , MBER_PHONE = #{mberPhone}
            , NOTICE_ZIP = #{noticeZip}
            , NOTICE_ADRES = #{noticeAdres}
            , NOTICE_DETAIL_ADRES = #{noticeDetailAdres}
            , MODIFY_DATE = SYSDATE
            , JOIN_CODE = #{joinCode}
            , MEMBER_LON = #{memberLon}
            , MEMBER_LAT = #{memberLat}
            , ADRES_NEW_YN = #{adresNewYn}
            , NOTICE_ADRES_NEW_YN = #{noticeAdresNewYn}
        WHERE MBER_ID = #{mberId}
        AND ESNTL_ID = #{esntlId}
        AND MBER_NM = #{mberNm}
    </update>
    
    <update id="updateCar" parameterType="hashmap">
        UPDATE
            TB_CAR
        SET
            CAR_NUMBER = #{carNumber}
            , CAR_NAME = #{carName}
            , CAR_ZIP = #{carZip}
            , CAR_ADRES = #{carAdres}
            , CAR_DETAIL_ADRES = #{carDetailAdres}
            , MODIFY_DATE = SYSDATE
            , LENT_CAR_YN = #{lentCarYn}
        WHERE CAR_KEY = #{carKey}
        AND ESNTL_ID = #{esntlId}
    </update>
    
    <delete id="deleteDiscountDetail" parameterType="hashmap">
        DELETE FROM
            TB_DISCOUNT_DETAIL
        WHERE ESNTL_ID = #{esntlId}
        AND CONTRACT_INFO_KEY IS NULL
    </delete>
    
    <insert id="insertDiscountDetail" parameterType="hashmap">
        INSERT INTO TB_DISCOUNT_DETAIL (
            DISCOUNT_DETAIL_KEY,
            ESNTL_ID,
            DISCOUNT_ITEM_KEY,
            CAR_CC,
            WELFARE_NUMBER,
            VETERAN_NUMBER,
            DISABILITY_GRADE,
            CREATION_DATE,
            MODIFY_DATE,
            CONTRACT_INFO_KEY,
            DISCOUNT_SELECT_YN,
            DISCOUNT_START_DATE
        ) VALUES (
            #{discountDetailKey},
            #{esntlId},
            #{discountItemKey},
            #{carCc},
            #{welfareNumber},
            #{veteranNumber},
            #{disabilityGrade},
            sysdate,
            sysdate,
            #{contractInfoKey},
            #{discountSelectYn},
            #{discountStartDate}
        )
    </insert>
    
    <delete id="deleteMemo" parameterType="hashmap" >
        DELETE FROM TB_MEMO
        WHERE ESNTL_ID = #{esntlId}
    </delete>
    
    <delete id="outDeleteDiscountDetail" parameterType="hashmap">
        DELETE TB_DISCOUNT_DETAIL
        WHERE ESNTL_ID = #{esntlId}
    </delete>
    
    <delete id="deleteHopeRequestSection" parameterType="hashmap">
        DELETE TB_HOPE_REQUEST_SECTION
        WHERE
            CONTRACT_INFO_KEY IN (
                SELECT
                    CONTRACT_INFO_KEY
                FROM
                    TB_CONTRACT_INFO con,
                    TB_CAR car,
                    COMTNGNRLMBER cus
                WHERE con.CAR_KEY = car.CAR_KEY
                AND car.ESNTL_ID = cus.ESNTL_ID
                AND cus.ESNTL_ID = #{esntlId}
            )
    </delete>
    
    <delete id="deleteAssignScoreDetail" parameterType="hashmap">
        DELETE TB_ASSIGN_SCORE_DETAIL
        WHERE
            CONTRACT_INFO_KEY IN (
                SELECT
                    CONTRACT_INFO_KEY
                FROM
                    TB_CONTRACT_INFO con,
                    TB_CAR car,
                    COMTNGNRLMBER cus
                WHERE con.CAR_KEY = car.CAR_KEY
                AND car.ESNTL_ID = cus.ESNTL_ID
                AND cus.ESNTL_ID = #{esntlId}
            )
    </delete>
    
    <delete id="deleteQuarterPayment" parameterType="hashmap">
        DELETE TB_QUARTER_PAYMENT
        WHERE
            CONTRACT_INFO_KEY IN (
                SELECT
                    CONTRACT_INFO_KEY
                FROM
                    TB_CONTRACT_INFO con,
                    TB_CAR car,
                    COMTNGNRLMBER cus
                WHERE con.CAR_KEY = car.CAR_KEY
                AND car.ESNTL_ID = cus.ESNTL_ID
                AND cus.ESNTL_ID = #{esntlId}
            )
    </delete>
    
    <delete id="deleteContractHistory" parameterType="hashmap">
        DELETE TB_CONTRACT_HISTORY
        WHERE
            CONTRACT_INFO_KEY IN (
                SELECT
                    CONTRACT_INFO_KEY
                FROM
                    TB_CONTRACT_INFO con,
                    TB_CAR car,
                    COMTNGNRLMBER cus
                WHERE con.CAR_KEY = car.CAR_KEY
                AND car.ESNTL_ID = cus.ESNTL_ID
                AND cus.ESNTL_ID = #{esntlId}
            )
    </delete>
    
    <delete id="deleteContractInfo" parameterType="hashmap">
        DELETE TB_CONTRACT_INFO
        WHERE
            CONTRACT_INFO_KEY IN (
                SELECT
                    CONTRACT_INFO_KEY
                FROM
                    TB_CONTRACT_INFO con,
                    TB_CAR car,
                    COMTNGNRLMBER cus
                WHERE con.CAR_KEY = car.CAR_KEY
                AND car.ESNTL_ID = cus.ESNTL_ID
                AND cus.ESNTL_ID = #{esntlId}
            )
    </delete>
    
    <delete id="deleteCar" parameterType="hashmap">
        DELETE TB_CAR
        WHERE ESNTL_ID = #{esntlId}
    </delete>
    
    <delete id="deleteCustomer">
        DELETE COMTNGNRLMBER WHERE ESNTL_ID = #{esntlId}
    </delete>
    
    <select id="selectStandbyStatusListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM
            COMTNGNRLMBER MBER
            , TB_CAR TC
            , TB_CONTRACT_INFO TCI
            , TB_HOPE_REQUEST_SECTION THRS
            , TB_PARK_SECTION TPS
        WHERE MBER.ESNTL_ID = #{esntlId}
        AND MBER.ESNTL_ID = TC.ESNTL_ID
        AND TC.CAR_KEY = TCI.CAR_KEY
        AND TCI.CONTRACT_INFO_KEY = THRS.CONTRACT_INFO_KEY
        AND THRS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
        AND TCI.PARKING_PRODUCT IN ('01', '03')
        --AND TCI.USE_TIME IS NULL
        ORDER BY TCI.REQUEST_DATE
    </select>
    
    <select id="selectPPStandbyListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM
            COMTNGNRLMBER MBER
            , TB_CAR TC
            , TB_CONTRACT_INFO TCI
            , TB_HOPE_REQUEST_SECTION THRS
            , TB_PARK_SECTION TPS
        WHERE MBER.ESNTL_ID = #{esntlId}
        AND MBER.ESNTL_ID = TC.ESNTL_ID
        AND TC.CAR_KEY = TCI.CAR_KEY
        AND TCI.CONTRACT_INFO_KEY = THRS.CONTRACT_INFO_KEY
        AND THRS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
        AND TCI.PARKING_PRODUCT = '01'
        ORDER BY TCI.REQUEST_DATE
    </select>

    <select id="selectStandbyStatusList" resultType="egovMap" parameterType="hashmap">
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
				    TCI.CONTRACT_INFO_KEY
				    , THRS.HOPE_REQUEST_SECTION_KEY
				    , TCI.PARKING_PRODUCT
				    , FN_CODENM('DFM030', TCI.PARKING_PRODUCT) PARKING_PRODUCT_NAME
				    , TCI.REQUEST_DATE
				    , TO_CHAR(TCI.REQUEST_DATE, 'YYYY-MM-DD') REQUEST_DATE_STR
				    , TC.CAR_NUMBER
				    , MBER.MBER_NM
				    , TPS.PARK_SECTION_NAME
				    , THRS.HOPE_TIME
				    , FN_CODENM('DFM012', THRS.HOPE_TIME) HOPE_TIME_NAME
				    , MBER.MBER_FLAG
				    , MBER.ESNTL_ID
				FROM
				    COMTNGNRLMBER MBER
				    , TB_CAR TC
				    , TB_CONTRACT_INFO TCI
				    , TB_HOPE_REQUEST_SECTION THRS
				    , TB_PARK_SECTION TPS
				WHERE MBER.ESNTL_ID = #{esntlId}
				AND MBER.ESNTL_ID = TC.ESNTL_ID
				AND TC.CAR_KEY = TCI.CAR_KEY
				AND TCI.CONTRACT_INFO_KEY = THRS.CONTRACT_INFO_KEY
				AND THRS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TCI.PARKING_PRODUCT IN ('01', '03')
				--AND TCI.USE_TIME IS NULL
				ORDER BY TCI.REQUEST_DATE
				
                ) A
            )
        
        <choose>
            <when test="mobileYn eq 'Y'.toString()">
            </when>
            <otherwise>
                <if test="pageNo != null and pageNo != ''">
		            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
		        </if>
            </otherwise>
        </choose>
        
    </select>
    
    <select id="selectPPStandbyList" resultType="egovMap" parameterType="hashmap">
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
				    TCI.CONTRACT_INFO_KEY
				    , THRS.HOPE_REQUEST_SECTION_KEY
				    , TCI.PARKING_PRODUCT
				    , FN_CODENM('DFM030', TCI.PARKING_PRODUCT) PARKING_PRODUCT_NAME
				    , TCI.REQUEST_DATE
				    , TO_CHAR(TCI.REQUEST_DATE, 'YYYY-MM-DD') REQUEST_DATE_STR
				    , TC.CAR_NUMBER
				    , MBER.MBER_NM
				    , TPS.PARK_SECTION_NAME
				    , THRS.HOPE_TIME
				    , FN_CODENM('DFM012', THRS.HOPE_TIME) HOPE_TIME_NAME
				FROM
				    COMTNGNRLMBER MBER
				    , TB_CAR TC
				    , TB_CONTRACT_INFO TCI
				    , TB_HOPE_REQUEST_SECTION THRS
				    , TB_PARK_SECTION TPS
				WHERE MBER.ESNTL_ID = #{esntlId}
				AND MBER.ESNTL_ID = TC.ESNTL_ID
				AND TC.CAR_KEY = TCI.CAR_KEY
				AND TCI.CONTRACT_INFO_KEY = THRS.CONTRACT_INFO_KEY
				AND THRS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TCI.PARKING_PRODUCT = '01'
				ORDER BY TCI.REQUEST_DATE
				
                ) A
            )
        
        <choose>
            <when test="mobileYn eq 'Y'.toString()">
            </when>
            <otherwise>
                <if test="pageNo != null and pageNo != ''">
		            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
		        </if>
            </otherwise>
        </choose>
        
    </select>

    <delete id="requestDeleteDiscountDetail" parameterType="hashmap">
        DELETE FROM
            TB_DISCOUNT_DETAIL
        WHERE ESNTL_ID = #{esntlId}
        AND CONTRACT_INFO_KEY = #{contractInfoKey}
    </delete>
    
    <delete id="requestDeleteHopeRequestSection" parameterType="hashmap">
        DELETE FROM TB_HOPE_REQUEST_SECTION
        WHERE CONTRACT_INFO_KEY = #{contractInfoKey}
    </delete>
    
    <delete id="requestDeleteQuarterPayment" parameterType="hashmap">
        DELETE FROM TB_QUARTER_PAYMENT
        WHERE CONTRACT_INFO_KEY = #{contractInfoKey}
    </delete>
    
    <delete id="requestDeleteContractHistory" parameterType="hashmap">
        DELETE FROM TB_CONTRACT_HISTORY
        WHERE CONTRACT_INFO_KEY = #{contractInfoKey}
    </delete>
    
    <delete id="requestDeleteContractInfo" parameterType="hashmap">
        DELETE FROM TB_CONTRACT_INFO
        WHERE  CONTRACT_INFO_KEY = #{contractInfoKey}
    </delete>
    
    <update id="deleteTagCustomer" parameterType="egovMap"> 
    	UPDATE COMTNGNRLMBER 
    	SET MBER_STTUS = 'D',
    		MODIFY_DATE = SYSDATE 
    	WHERE ESNTL_ID = #{esntlId}
    </update>

	<insert id="insertPay" parameterType="hashmap">
	<selectKey keyProperty="result" resultType="java.lang.Integer"> 
	select 1 from dual
	</selectKey> 
        INSERT INTO TB_PAY
                (
                PAYMENT_KEY
                , PURCHASE_KEY
                , PAY_WAY
                , PAY_AMT
                , COMM_COST
                , STORE_DATE
                , TRANSFER_DATE
                , INDEX_NO
                , STORE_GUBUN
                , CUST_INQUIRY_NO
                , PAY_DATE
                , PAY_STATUS
                )
            VALUES
                (
                #{saveNextPayKey}  
                , #{purchaseKey}
                , '02'
                , #{payAmt}
                , 0
                , #{payDate}
                , ''
                , ''
                , ''
                , #{custInquiryNo}
                , #{payDate}
                , '02'
                )
    </insert> 
    
    <select id="selectOcrNo" resultType="String" parameterType="hashmap">  	
	  	SELECT OCR_NO FROM TB_QUARTER_PAYMENT WHERE PURCHASE_KEY = #{purchaseKey}
	</select>
	
    <select id="selectMemberStatus" resultType="egovMap">
		SELECT ESNTL_ID, SUM(ASSIGNED_COUNT) ASSIGNED_COUNT FROM 
			(SELECT TC.ESNTL_ID, CASE WHEN TQP.ASSIGN_STATUS = '01' AND TQP.USE_END_DATE >= SYSDATE 
				OR TQP.ASSIGN_STATUS IN ('03', '04') THEN 1 ELSE 0 END ASSIGNED_COUNT
			FROM TB_CAR TC , TB_CONTRACT_INFO TCI , TB_QUARTER_PAYMENT TQP, COMTNGNRLMBER MBER
			WHERE MBER.ESNTL_ID = TC.ESNTL_ID AND TC.CAR_KEY = TCI.CAR_KEY 
				AND TCI.CONTRACT_INFO_KEY = TQP.CONTRACT_INFO_KEY 
				AND ((TQP.ASSIGN_STATUS = '01' AND TQP.USE_END_DATE >= SYSDATE) OR TQP.ASSIGN_STATUS IN ('03', '04')) 
				AND MBER.ESNTL_ID = #{esntlId})
		GROUP BY ESNTL_ID 
    </select>
	    
</mapper>