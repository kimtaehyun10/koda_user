<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koticobui.dfmc.client.sup.mapper.SupportMapper">

    <select id="selectNoticeListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM TB_NOTICE
        WHERE CLIENT_YN = 'Y'
    </select>
    
    <!-- 
    <select id="selectNoticeList" resultType="egovMap" parameterType="hashmap">
     -->
    <select id="selectNoticeList" resultType="supportVO" parameterType="hashmap">
    
        SELECT
            *
        FROM (
            SELECT
                AA.*
                , ROWNUM RNUM
            FROM (
                SELECT
                    A.*
                    , TO_CHAR(CREATION_DATE_DECODE, 'YYYY-MM-DD') CREATION_DATE_DECODE_STR
                FROM
                    (
                    SELECT
                        NOTICE_KEY
                        , TITLE
                        , CONTENTS
                        , CREATOR_ID
                        , CREATION_DATE
                        , MODIFY_DATE
                        , CLIENT_YN
                        , (SELECT USER_NM FROM COMTNEMPLYRINFO WHERE EMPLYR_ID = TB_NOTICE.CREATOR_ID) CREATOR_ID_NAME
                        , DECODE(MODIFY_DATE, NULL, CREATION_DATE, '', CREATION_DATE, MODIFY_DATE) CREATION_DATE_DECODE
                    FROM TB_NOTICE
                    WHERE CLIENT_YN = 'Y'
                ) A
                ORDER BY CREATION_DATE_DECODE DESC
            ) AA
        )
        
        <choose>
            <when test="mobileYn eq 'Y'.toString()">
            	WHERE RNUM <![CDATA[ <= ]]> 50
            </when>
            <otherwise>
                <if test="pageNo != null and pageNo != ''">
		            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
		        </if>
            </otherwise>
        </choose>
        
    </select>
    
    <select id="selectRegulatePaymentListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            SUM(CNT)
        FROM (
			SELECT
				COUNT(1) CNT
		    FROM
				TB_REGULATE TR
				, TB_REGULATE_RECEIVE TRR
				, TB_PARK_SECTION TPS
				, TB_PARK_BLOCK TPB
				, TB_PARK_DIVISION TPD
				, TB_QUARTER_PAYMENT TQP
			WHERE TR.REGULATE_KEY = TRR.REGULATE_KEY
			AND TRR.CAR_NUMBER = #{searchCarNumber}
			AND TR.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
			AND TR.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY
			AND TR.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY
			AND TRR.PURCHASE_KEY = TQP.PURCHASE_KEY
			AND (TR.CANCEL_YN = 'N' OR TR.CANCEL_YN IS NULL)
			AND TQP.STATUS_CD IN ('00', '03')
			AND TQP.PAY_METHOD_CD = '01'
			AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
			UNION ALL
			SELECT
				COUNT(1) CNT
				FROM
				TB_TIME_PARK_CONDITION TTPC
				, TB_TIME_PARK_RECEIVE TTPR
				, TB_PARK_SECTION TPS
				, TB_QUARTER_PAYMENT TQP
			WHERE TTPC.TIME_PARK_CONDITION_KEY = TTPR.TIME_PARK_CONDITION_KEY
			AND TTPR.CAR_NUMBER = #{searchCarNumber}
			AND TTPC.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
			AND TTPR.PURCHASE_KEY = TQP.PURCHASE_KEY
			AND (TTPC.CANCEL_YN = 'N' OR TTPC.CANCEL_YN IS NULL)
			AND TQP.STATUS_CD IN ('00', '03')
			AND TQP.PAY_METHOD_CD = '01'
			AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
        )
    </select>

    <select id="selectRegulatePaymentList" resultType="egovMap" parameterType="hashmap">
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
					TR.REGULATE_KEY
					, TRR.REGULATE_RECEIVE_KEY
					, TQP.PURCHASE_KEY
					, TO_CHAR(TR.REGULATE_DATE, 'YYYY.MM.DD')||' '|| SUBSTR(TR.REGULATE_TIME, 0, 2)||':'||SUBSTR(TR.REGULATE_TIME, 3, 2) REGULATE_DATE_TIME_STR
					, '' ENTER_DATE_TIME_STR
					, '' OUT_TIME_STR
					, TRR.CAR_NUMBER
					, TRR.CAR_NAME
					, TRR.CAR_OWN_NAME
					, TRR.CAR_TEL
					, TPS.PARK_SECTION_NAME
					, TPB.PARK_BLOCK_NAME
					, TPD.DIVISION_NAME
					, TQP.COST
					, TRIM(TO_CHAR(TQP.COST, '999,999,999,999,999')) COST_COMMA
					, FN_CODENM('DFM016', TQP.STATUS_CD) STATUS_CD_NAME
					, TO_CHAR(TO_DATE(TQP.PAY_LIMIT_DT, 'YYYYMMDD'), 'YYYY-MM-DD') PAY_LIMIT_DT_STR
					, TQP.STAT_CD
					, FN_CODENM('DFM039', TQP.STAT_CD) STAT_CD_NAME
				FROM
					TB_REGULATE TR
					, TB_REGULATE_RECEIVE TRR
					, TB_PARK_SECTION TPS
					, TB_PARK_BLOCK TPB
					, TB_PARK_DIVISION TPD
					, TB_QUARTER_PAYMENT TQP
				WHERE TR.REGULATE_KEY = TRR.REGULATE_KEY
				AND TRR.CAR_NUMBER = #{searchCarNumber}
				AND TR.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TR.PARK_BLOCK_KEY = TPB.PARK_BLOCK_KEY
				AND TR.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY
				AND TRR.PURCHASE_KEY = TQP.PURCHASE_KEY
				AND (TR.CANCEL_YN = 'N' OR TR.CANCEL_YN IS NULL)
				AND TQP.STATUS_CD IN ('00', '03')
				AND TQP.PAY_METHOD_CD = '01'
				AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
				UNION ALL
				SELECT
					TTPC.TIME_PARK_CONDITION_KEY AS REGULATE_KEY
					, TTPR.TIME_PARK_RECEIVE_KEY AS REGULATE_RECEIVE_KEY
					, TQP.PURCHASE_KEY
					, '' REGULATE_DATE_TIME_STR
					, TO_CHAR(TTPC.ENTER_DATE, 'YYYY.MM.DD')||' '|| SUBSTR(TTPC.ENTER_TIME, 0, 2)||':'||SUBSTR(TTPC.ENTER_TIME, 3, 2) ENTER_DATE_TIME_STR
					, SUBSTR(TTPC.OUT_TIME, 0, 2)||':'||SUBSTR(TTPC.OUT_TIME, 3, 2) OUT_TIME_STR
					, TTPR.CAR_NUMBER
					, TTPR.CAR_NAME
					, TTPR.CAR_OWN_NAME
					, TTPR.CAR_TEL
					, TPS.PARK_SECTION_NAME
					, '' PARK_BLOCK_NAME
					, '' DIVISION_NAME
					, TQP.COST
					, TRIM(TO_CHAR(TQP.COST, '999,999,999,999,999')) COST_COMMA
					, FN_CODENM('DFM016', TQP.STATUS_CD) STATUS_CD_NAME
					, TO_CHAR(TO_DATE(TQP.PAY_LIMIT_DT, 'YYYYMMDD'), 'YYYY-MM-DD') PAY_LIMIT_DT_STR
					, TQP.STAT_CD
					, FN_CODENM('DFM039', TQP.STAT_CD) STAT_CD_NAME
				FROM
					TB_TIME_PARK_CONDITION TTPC
					, TB_TIME_PARK_RECEIVE TTPR
					, TB_PARK_SECTION TPS
					, TB_QUARTER_PAYMENT TQP
				WHERE TTPC.TIME_PARK_CONDITION_KEY = TTPR.TIME_PARK_CONDITION_KEY
				AND TTPR.CAR_NUMBER = #{searchCarNumber}
				AND TTPC.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY
				AND TTPR.PURCHASE_KEY = TQP.PURCHASE_KEY
				AND (TTPC.CANCEL_YN = 'N' OR TTPC.CANCEL_YN IS NULL)
				AND TQP.STATUS_CD IN ('00', '03')
				AND TQP.PAY_METHOD_CD = '01'
				AND TQP.PAY_LIMIT_DT <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
				
                ) A
            )
            
        <if test="pageNo != null and pageNo != ''">
            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
        </if>
    </select>
    

</mapper>