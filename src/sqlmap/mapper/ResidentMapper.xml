<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koticobui.dfmc.client.res.mapper.ResidentMapper">

    <select id="selectParkingConditionListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM (
            SELECT
                MANAGE_ZONE
            FROM (
                SELECT
	                TPS.PARK_SECTION_KEY
	                , TPS.MANAGE_ZONE
	                , COUNT(THRS.HOPE_REQUEST_SECTION_KEY) HOPE_CNT
	            FROM
	                TB_PARK_SECTION TPS
	                , TB_HOPE_REQUEST_SECTION THRS
	                , TB_CONTRACT_INFO TCI
	            WHERE TPS.SECTION_TYPE = '01'
	            AND TPS.PARK_SECTION_KEY = THRS.PARK_SECTION_KEY(+)
	            AND THRS.CONTRACT_INFO_KEY = TCI.CONTRACT_INFO_KEY(+)
	            AND TCI.USE_TIME IS NULL
	            GROUP BY TPS.PARK_SECTION_KEY, TPS.MANAGE_ZONE
            )
            GROUP BY MANAGE_ZONE
        )
    </select>
    
    <select id="selectParkingConditionList" resultType="egovMap" parameterType="hashmap">
    	<!-- 
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
					MANAGE_ZONE
					, FN_CODENM('DFM013', MANAGE_ZONE) MANAGE_ZONE_NAME
					, COUNT(PARK_SECTION_KEY) SECTION_CNT
					, SUM(HOPE_CNT) STANDBY_CNT
				FROM (
				    SELECT
						TPS.PARK_SECTION_KEY
						, TPS.MANAGE_ZONE
						, COUNT(THRS.HOPE_REQUEST_SECTION_KEY) HOPE_CNT
				    FROM
						TB_PARK_SECTION TPS
						, TB_HOPE_REQUEST_SECTION THRS
						, TB_CONTRACT_INFO TCI
					WHERE TPS.SECTION_TYPE = '01'
					AND TPS.PARK_SECTION_KEY = THRS.PARK_SECTION_KEY(+)
					AND THRS.CONTRACT_INFO_KEY = TCI.CONTRACT_INFO_KEY(+)
					AND TCI.USE_TIME IS NULL
					GROUP BY TPS.PARK_SECTION_KEY, TPS.MANAGE_ZONE
				)
				GROUP BY MANAGE_ZONE
				ORDER BY MANAGE_ZONE_NAME
            ) A
        )
         -->
        <!--
        <if test="pageNo != null and pageNo != ''">
            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
        </if>
         -->
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
                SELECT
					MANAGE_ZONE
					, FN_CODENM('DFM013', MANAGE_ZONE) MANAGE_ZONE_NAME
					, COUNT(PARK_SECTION_KEY) SECTION_CNT
				FROM (
				    SELECT
						TPS.PARK_SECTION_KEY
						, TPS.MANAGE_ZONE
				    FROM
						TB_PARK_SECTION TPS
					WHERE TPS.SECTION_TYPE = '01'
					GROUP BY TPS.PARK_SECTION_KEY, TPS.MANAGE_ZONE
				)
				GROUP BY MANAGE_ZONE
				ORDER BY MANAGE_ZONE_NAME
            ) A
        )
    </select>

    <select id="selectDivisionListTot" resultType="Integer" parameterType="hashmap">
        SELECT
            COUNT(1)
        FROM
			TB_PARK_SECTION TPS
			, TB_PARK_BLOCK TPB
		WHERE TPS.SECTION_STATUS = '01'
		AND TPS.SECTION_TYPE = '01'
		AND TPB.BLOCK_STATUS = '01'
		AND TPS.PARK_SECTION_KEY = TPB.PARK_SECTION_KEY
		
		<if test="searchManageZone != null and searchManageZone != ''">
            AND TPS.MANAGE_ZONE = #{searchManageZone}
        </if>
        
        <if test="searchParkSectionKey != null and searchParkSectionKey != ''">
            AND TPS.PARK_SECTION_KEY = #{searchParkSectionKey}
        </if>
        
        <if test="searchParkBlockKey != null and searchParkBlockKey != ''">
            AND TPB.PARK_BLOCK_KEY = #{searchParkBlockKey}
        </if>
    </select>
    
    <select id="selectDivisionList" resultType="egovMap" parameterType="hashmap">
        SELECT
            *
        FROM (
            SELECT
                A.*
                , ROWNUM RNUM
            FROM (
            
            	<!-- 
                SELECT
					TPS.PARK_SECTION_KEY
					, TPB.PARK_BLOCK_KEY
					, TPD.PARK_DIVISION_KEY
					, TPS.MANAGE_ZONE
					, FN_CODENM('DFM013', TPS.MANAGE_ZONE) MANAGE_ZONE_NAME
					, TPS.PARK_SECTION_NAME
					, TPB.PARK_BLOCK_NAME
					, TPD.DIVISION_NAME
				    , TPS.PARK_SECTION_NAME||'/'||TPB.PARK_BLOCK_NAME||'/'||TPD.DIVISION_NAME AS SECTION_INFO
				    , (
				        SELECT COUNT(1)
				        FROM 
				            TB_HOPE_REQUEST_SECTION THRS
				            , TB_CONTRACT_INFO TCI
				        WHERE TPB.PARK_BLOCK_KEY = THRS.PARK_BLOCK_KEY
				        AND TCI.USE_TIME IS NULL
				        AND THRS.CONTRACT_INFO_KEY = TCI.CONTRACT_INFO_KEY
				    ) STANDBY_COUNT
				FROM
					TB_PARK_SECTION TPS
					, TB_PARK_BLOCK TPB
					, TB_PARK_DIVISION TPD
				WHERE TPS.SECTION_STATUS = '01'
				AND TPS.SECTION_TYPE = '01'
				AND TPB.BLOCK_STATUS = '01'
				AND TPD.DIVISION_STATUS = '01'
				AND TPS.PARK_SECTION_KEY = TPB.PARK_SECTION_KEY
				AND TPB.PARK_BLOCK_KEY = TPD.PARK_BLOCK_KEY
				
				<if test="searchManageZone != null and searchManageZone != ''">
                    AND TPS.MANAGE_ZONE = #{searchManageZone}
                </if>
                
                <if test="searchParkSectionKey != null and searchParkSectionKey != ''">
                    AND TPS.PARK_SECTION_KEY = #{searchParkSectionKey}
                </if>
                
                <if test="searchParkBlockKey != null and searchParkBlockKey != ''">
                    AND TPB.PARK_BLOCK_KEY = #{searchParkBlockKey}
                </if>
                
                <if test="searchParkDivisionKey != null and searchParkDivisionKey != ''">
                    AND TPD.PARK_DIVISION_KEY = #{searchParkDivisionKey}
                </if>
				
				ORDER BY TPS.PARK_SECTION_NAME, TPB.PARK_BLOCK_NAME, TPD.DIVISION_NAME
				 -->
				SELECT
					TPS.PARK_SECTION_KEY
					, TPB.PARK_BLOCK_KEY
					, TPS.MANAGE_ZONE
					, FN_CODENM('DFM013', TPS.MANAGE_ZONE) MANAGE_ZONE_NAME
					, TPS.PARK_SECTION_NAME
					, TPB.PARK_BLOCK_NAME
				    , TPS.PARK_SECTION_NAME||'/'||TPB.PARK_BLOCK_NAME AS SECTION_INFO
				FROM
					TB_PARK_SECTION TPS
					, TB_PARK_BLOCK TPB
				WHERE TPS.SECTION_STATUS = '01'
				AND TPS.SECTION_TYPE = '01'
				AND TPB.BLOCK_STATUS = '01'
				AND TPS.PARK_SECTION_KEY = TPB.PARK_SECTION_KEY
				
				<if test="searchManageZone != null and searchManageZone != ''">
                    AND TPS.MANAGE_ZONE = #{searchManageZone}
                </if>
                
                <if test="searchParkSectionKey != null and searchParkSectionKey != ''">
                    AND TPS.PARK_SECTION_KEY = #{searchParkSectionKey}
                </if>
                
                <if test="searchParkBlockKey != null and searchParkBlockKey != ''">
                    AND TPB.PARK_BLOCK_KEY = #{searchParkBlockKey}
                </if>
				
				ORDER BY TPS.PARK_SECTION_NAME, TPB.PARK_BLOCK_NAME
                ) A
            )
            
        <if test="pageNo != null and pageNo != ''">
            WHERE RNUM BETWEEN ((${pageNo} -1) * ${pageSize}) + 1  AND (((${pageNo} -1) * ${pageSize})) + ${pageSize}
        </if>
        
    </select>
    
    <insert id="insertContractInfo" parameterType="hashmap">
        INSERT INTO TB_CONTRACT_INFO (
	        CONTRACT_INFO_KEY,
	        CAR_KEY,
	        ASSIGN_SECTION_KEY,
	        PARKING_PRODUCT,
	        SHARE_PRINT_YN,
	        SHARE_PRINT_DATE,
	        REQUEST_DATE,
	        STANDBY_DATE,
	        USE_TIME
        ) VALUES (
	        #{contractInfoKey},
	        #{carKey},
	        #{assignSectionKey},
	        #{parkingProduct},
	        #{sharePrintYn},
	        #{sharePrintDate},
	        sysdate,
	        sysdate,
	        #{useTime}
        )
    </insert>
    
    <update id="updateRequestDate" parameterType="hashmap">
        UPDATE TB_CONTRACT_INFO SET
	        REQUEST_DATE = sysdate
	    WHERE
	    	CONTRACT_INFO_KEY = #{contractInfoKey} 
    </update>

    <insert id="insertContractHistory" parameterType="hashmap">
        INSERT INTO TB_CONTRACT_HISTORY (
            CONTRACT_HISTORY_KEY,
            CONTRACT_INFO_KEY,
            PARKING_PRODUCT,
            ASSIGN_STATUS,
            SHARE_PRINT_YN,
            SHARE_PRINT_DATE,
            USE_BEGIN_DATE,
            USE_END_DATE,
            REQUEST_DATE,
            STANDBY_DATE,
            ASSIGN_DATE,
            USE_TIME,
            USE_CHARGE
        ) VALUES (
            #{contractHistoryKey},
            #{contractInfoKey},
            #{parkingProduct},
            #{assignStatus},
            #{sharePrintYn},
            #{sharePrintDate},
            #{useBeginDate},
            #{useEndDate},
            #{requestDate},
            #{standbyDate},
            #{assignDate},
            #{useTime},
            #{useCharge}
        )
    </insert>
    
    <select id="selectDiscountDetailNullContractKeyList" resultType="egovMap" parameterType="hashmap">
        SELECT *
        FROM TB_DISCOUNT_DETAIL
        WHERE ESNTL_ID = #{esntlId}
        AND CONTRACT_INFO_KEY IS NULL
    </select>
    
    <insert id="insertDiscountDetail" parameterType="hashmap">
        INSERT INTO TB_DISCOUNT_DETAIL (
            DISCOUNT_DETAIL_KEY,
            ESNTL_ID,
            DISCOUNT_ITEM_KEY,
            CAR_CC,
            WELFARE_NUMBER,
            VETERAN_NUMBER,
            DISABILITY_GRADE,
            CREATION_DATE,
            MODIFY_DATE,
            CONTRACT_INFO_KEY,
            DISCOUNT_SELECT_YN,
            DISCOUNT_START_DATE
        ) VALUES (
            #{discountDetailKey},
            #{esntlId},
            #{discountItemKey},
            #{carCc},
            #{welfareNumber},
            #{veteranNumber},
            #{disabilityGrade},
            sysdate,
            sysdate,
            #{contractInfoKey},
            #{discountSelectYn},
            #{discountStartDate}
        )
    </insert>
    
    <insert id="insertHopeRequestSection" parameterType="hashmap">
        INSERT INTO TB_HOPE_REQUEST_SECTION (
	        HOPE_REQUEST_SECTION_KEY,
	        PARK_BLOCK_KEY,
	        PARK_SECTION_KEY,
	        HOPE_TIME,
	        CONTRACT_INFO_KEY,
	        HOPE_RANK
        ) VALUES (
	        #{hopeRequestSectionKey},
	        #{parkBlockKey},
	        #{parkSectionKey},
	        #{hopeTime},
	        #{contractInfoKey},
	        #{hopeRank}
        )
    </insert>
    
    <update id="updateHopeRequestSection" parameterType="hashmap">
        UPDATE TB_HOPE_REQUEST_SECTION SET
	        PARK_BLOCK_KEY = #{parkBlockKey}, 
	        PARK_SECTION_KEY = #{parkSectionKey},
	        HOPE_TIME = #{hopeTime},
	        HOPE_RANK = #{hopeRank}
	    WHERE HOPE_REQUEST_SECTION_KEY = #{hopeRequestSectionKey} 
    </update>

    <insert id="insertQuarterPayment" parameterType="hashmap">
        INSERT INTO
        TB_QUARTER_PAYMENT
        (
	        PURCHASE_KEY
	        , CONTRACT_INFO_KEY
	        , QUARTER_SEQ
	        , YEAR
	        , STAT_CD
	        , COST
	        , DISCNT_COST
	        , PAY_METHOD_CD
	        , PAY_LIMIT_DT
	        , STATUS_CD
	        , NOTI_DT
	        , CREATOR
	        , MODIFIER
	        , CREATION_DATE
	        , MODIFY_DATE
	        , ASSIGN_STATUS
	        , ASSIGN_DATE
	        , USE_BEGIN_DATE
	        , USE_END_DATE
        ) VALUES (
	        #{purchaseKey}
	        , #{contractInfoKey}
	        , #{quarterSeq}
	        , #{year}
	        , #{statCd}
	        , #{cost}
	        , #{discntCost}
	        , #{payMethodCd}--'00'
	        , #{payLimitDt}
	        , #{statusCd}--'00'
	        , #{notiDt}
	        , #{creator}
	        , #{modifier}
	        , sysdate
	        , sysdate
	        , #{assignStatus}--'02'
	        , #{assignDate}
	        , TO_DATE(#{useBeginDate}, 'YYYY-MM-DD')
	        , TO_DATE(#{useEndDate}, 'YYYY-MM-DD')
        )
    </insert>
    
    <update id="updateMberFlag" parameterType="egovMap"> 
    	UPDATE COMTNGNRLMBER 
    	SET MBER_FLAG = #{mberFlag},
    		MODIFY_DATE = SYSDATE 
    	WHERE ESNTL_ID = #{esntlId}
    </update>
    <!--		SELECT A.PARK_SECTION_KEY AS unitseqno, 
		       A.PARK_DIVISION_KEY AS sectionseqno, 
		       DECODE(B.DIVISION_STATUS, '01', 'GO', '02', 'OC', '03', 'DL', 'XX') AS usestatus, 
		       C.SECTION_LAT AS longitude, 
		       C.SECTION_LON AS latitude, 
		       E.CAR_NUMBER AS carno, 
		       REPLACE(F.MBER_PHONE, '-', '') AS mobile, 
		       DECODE(D.USE_TIME, '01', '1', '02', '2', '03', '3') AS usetimeseqno, 
		       I.USE_BEGIN_DATE AS applyfromdate, 
		       I.USE_END_DATE AS applytodate,
		       DECODE(NVL(J.COST, 0), 0, 'N', 'Y') AS minapyn,
		       NVL(H.DISCOUNT_RATE, 0) / 100 AS discvalue
		  FROM TB_ASSIGN_SECTION A, TB_PARK_DIVISION B, TB_PARK_SECTION C, TB_CONTRACT_INFO D, TB_CAR E, COMTNGNRLMBER F, 
		       TB_DISCOUNT_DETAIL G, TB_DISCOUNT_ITEM H, TB_CONTRACT_HISTORY I, TB_QUARTER_PAYMENT J
		 WHERE A.PARK_DIVISION_KEY = B.PARK_DIVISION_KEY
		   AND A.PARK_BLOCK_KEY = B.PARK_BLOCK_KEY
		   AND A.PARK_SECTION_KEY = B.PARK_SECTION_KEY
		   AND A.PARK_SECTION_KEY = C.PARK_SECTION_KEY
		   AND A.ASSIGN_SECTION_KEY = D.ASSIGN_SECTION_KEY
		   AND D.CAR_KEY = E.CAR_KEY
		   AND E.ESNTL_ID = F.ESNTL_ID(+)
		   AND E.ESNTL_ID = G.ESNTL_ID(+)
		   AND G.DISCOUNT_ITEM_KEY = H.DISCOUNT_ITEM_KEY(+)
		   AND D.CONTRACT_INFO_KEY = I.CONTRACT_INFO_KEY(+)
		   AND D.CONTRACT_INFO_KEY = J.CONTRACT_INFO_KEY(+)	
           <if test="unit != null and unit != ''">
               AND A.PARK_SECTION_KEY = #{unit}
           </if>		   	
           <if test="section != null and section != ''">
               AND A.PARK_DIVISION_KEY = #{section}
           </if>
           ORDER BY A.PARK_SECTION_KEY, A.PARK_DIVISION_KEY
      -->
    <select id="xmlChange" resultType="egovMap" parameterType="hashmap">
		SELECT TAS.PARK_SECTION_KEY AS unitseqno, 
		       TAS.PARK_DIVISION_KEY AS sectionseqno, 
		       DECODE(TPD.DIVISION_STATUS, '01', 'GO', '02', 'OC', 'XX') AS usestatus, 
		       TPS.SECTION_LAT AS longitude, 
		       TPS.SECTION_LON AS latitude, 
		       TC.CAR_NUMBER AS carno, 
		       REPLACE(MBER.MBER_PHONE, '-', '') AS mobile, 
		       DECODE(TCI.USE_TIME, '01', '1', '02', '2', '03', '3') AS usetimeseqno, 
		       TO_CHAR(TQP.USE_BEGIN_DATE, 'YYYY-MM-DD') AS applyfromdate, 
		       TO_CHAR(TQP.USE_END_DATE, 'YYYY-MM-DD') AS applytodate, 
		       DECODE(TQP.STATUS_CD, '03', 'Y', 'N') AS minapyn  
		  FROM COMTNGNRLMBER MBER , 
		       TB_CAR TC , 
		       TB_CONTRACT_INFO TCI , 
		       TB_ASSIGN_SECTION TAS , 
		       TB_PARK_SECTION TPS , 
		       TB_PARK_DIVISION TPD, 
		       TB_QUARTER_PAYMENT TQP , 
		       TB_PAY TP , 
		       (SELECT A.DISCOUNT_NAME, 
		              B.CONTRACT_INFO_KEY 
		         FROM TB_DISCOUNT_ITEM A 
		          INNER JOIN TB_DISCOUNT_DETAIL B 
		              ON B.DISCOUNT_ITEM_KEY = A.DISCOUNT_ITEM_KEY 
		       ) TDD 
		 WHERE 1 = 1 
	       AND MBER.ESNTL_ID = TC.ESNTL_ID 
	       AND TC.CAR_KEY = TCI.CAR_KEY 
	       AND TCI.ASSIGN_SECTION_KEY = TAS.ASSIGN_SECTION_KEY 
	       AND TAS.PARK_SECTION_KEY = TPS.PARK_SECTION_KEY 
	       AND TAS.PARK_DIVISION_KEY = TPD.PARK_DIVISION_KEY(+) 
	       AND TCI.CONTRACT_INFO_KEY = TQP.CONTRACT_INFO_KEY 
	       AND TP.PURCHASE_KEY(+) = TQP.PURCHASE_KEY 
	       AND TDD.CONTRACT_INFO_KEY(+) = TCI.CONTRACT_INFO_KEY 
           <if test="unit != null and unit != ''">
               AND TAS.PARK_SECTION_KEY = #{unit}
           </if>		   	
           <if test="section != null and section != ''">
               AND TAS.PARK_DIVISION_KEY = #{section}
           </if>		       
		ORDER BY TAS.PARK_SECTION_KEY
    </select>
    
</mapper>